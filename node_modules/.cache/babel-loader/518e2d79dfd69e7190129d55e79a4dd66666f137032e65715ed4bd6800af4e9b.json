{"ast":null,"code":"import { useState } from \"react\";\nclass CharlistData {\n  constructor() {\n    var _s = $RefreshSig$();\n    this.filling = (len, startValue, str) => {\n      let array = Array(len).fill(startValue);\n      for (let i = 0; i < array.length; i++) {\n        if (localStorage.getItem(str + i) !== null) {\n          array[i] = localStorage.getItem(str + i);\n          console.log(localStorage.getItem(str + i));\n        }\n      }\n      return array;\n    };\n    this.changeStateArray = (state, name) => index => newVal => {\n      const newStateValue = state[0].slice(0);\n      newStateValue[index] = newVal;\n      state[1](newStateValue);\n      for (let i = 0; i < newStateValue.length; i++) {\n        localStorage.setItem(name + i, newStateValue[i]);\n      }\n    };\n    this.createStateArray = _s((name, len, startValue) => {\n      _s();\n      const state = useState(this.filling(len, startValue, name));\n      return {\n        value: state[0],\n        setValue: this.changeStateArray(state, name),\n        name: name\n      };\n    }, \"m7gIKO1zg37OEXYku/ZgM9VEdJQ=\");\n    this.list = {\n      charName: this.createStateArray(\"charName\", 1, \"Безымянный\"),\n      power: this.createStateArray(\"power\", 1, \"35\"),\n      curHits: this.createStateArray(\"curHits\", 1, \"0\"),\n      curMane: this.createStateArray(\"curMane\", 1, \"0\"),\n      boneHits: this.createStateArray(\"boneHits\", 1, \"6\"),\n      boneMane: this.createStateArray(\"boneMane\", 1, \"6\"),\n      inspiration: this.createStateArray(\"inspiration\", 1, \"0\"),\n      harks: this.createStateArray(\"harks\", 6, \"0\"),\n      naviks: this.createStateArray(\"naviks\", 20, \"0\"),\n      vladenia: this.createStateArray(\"vladenia\", 99, \"0\"),\n      equip: this.createStateArray(\"equip\", 1, \"\"),\n      charClass: this.createStateArray(\"charClass\", 1, \"\"),\n      charRase: this.createStateArray(\"charRase\", 1, \"\"),\n      skills: this.createStateArray(\"skills\", 1, \"\"),\n      spells: this.createStateArray(\"spells\", 1, \"\"),\n      wounds: this.createStateArray(\"wounds\", 1, \"\"),\n      aspects: this.createStateArray(\"aspects\", 1, \"\"),\n      addMaxHits: this.createStateArray(\"addMaxHits\", 1, \"0\"),\n      addMaxMane: this.createStateArray(\"addMaxMane\", 1, \"0\")\n    };\n    this.evalValueList = {\n      maxHits: (+this.list.boneHits.value[0] + 1) * 4 + +this.list.harks.value[1] * 8 + +this.list.addMaxHits.value[0],\n      maxMane: (+this.list.boneMane.value[0] + 1) * 4 + +this.list.harks.value[4] * 8 + +this.list.addMaxMane.value[0],\n      skillPoint: +this.list.power.value[0] - +this.list.harks.value.reduce((acc, cur) => acc + +cur, 0) - +this.list.naviks.value.reduce((acc, cur) => acc + +cur, 0)\n    };\n  }\n}\nexport default CharlistData;","map":{"version":3,"names":["useState","CharlistData","filling","len","startValue","str","array","Array","fill","i","length","localStorage","getItem","console","log","changeStateArray","state","name","index","newVal","newStateValue","slice","setItem","createStateArray","value","setValue","list","charName","power","curHits","curMane","boneHits","boneMane","inspiration","harks","naviks","vladenia","equip","charClass","charRase","skills","spells","wounds","aspects","addMaxHits","addMaxMane","evalValueList","maxHits","maxMane","skillPoint","reduce","acc","cur"],"sources":["C:/All/Drg/AllOsaFile/webosajs/src/CharlistData.jsx"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nclass CharlistData {\r\n    filling = (len, startValue, str) => {\r\n        let array = Array(len).fill(startValue);\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (localStorage.getItem(str + i) !== null) {\r\n                array[i] = localStorage.getItem(str + i);\r\n                console.log(localStorage.getItem(str + i))\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    changeStateArray = (state, name) => (index) => (newVal) => {\r\n        const newStateValue = state[0].slice(0)\r\n        newStateValue[index] = newVal\r\n        state[1](newStateValue)\r\n        for (let i = 0; i < newStateValue.length; i++) {\r\n            localStorage.setItem(name + i, newStateValue[i]);\r\n        }\r\n    };\r\n\r\n    createStateArray = (name, len, startValue) => {\r\n        const state = useState(this.filling(len, startValue, name));\r\n        return {\r\n            value: state[0],\r\n            setValue: this.changeStateArray(state, name),\r\n            name: name\r\n        }\r\n    }\r\n\r\n    list = {\r\n        charName: this.createStateArray(\"charName\", 1, \"Безымянный\"),\r\n        power: this.createStateArray(\"power\", 1, \"35\"),\r\n        curHits: this.createStateArray(\"curHits\", 1, \"0\"),\r\n        curMane: this.createStateArray(\"curMane\", 1, \"0\"),\r\n        boneHits: this.createStateArray(\"boneHits\", 1, \"6\"),\r\n        boneMane: this.createStateArray(\"boneMane\", 1, \"6\"),\r\n        inspiration: this.createStateArray(\"inspiration\", 1, \"0\"),\r\n        harks: this.createStateArray(\"harks\", 6, \"0\"),\r\n        naviks: this.createStateArray(\"naviks\", 20, \"0\"),\r\n        vladenia: this.createStateArray(\"vladenia\", 99, \"0\"),\r\n        equip: this.createStateArray(\"equip\", 1, \"\"),\r\n        charClass: this.createStateArray(\"charClass\", 1, \"\"),\r\n        charRase: this.createStateArray(\"charRase\", 1, \"\"),\r\n        skills: this.createStateArray(\"skills\", 1, \"\"),\r\n        spells: this.createStateArray(\"spells\", 1, \"\"),\r\n        wounds: this.createStateArray(\"wounds\", 1, \"\"),\r\n        aspects: this.createStateArray(\"aspects\", 1, \"\"),\r\n        addMaxHits: this.createStateArray(\"addMaxHits\", 1, \"0\"),\r\n        addMaxMane: this.createStateArray(\"addMaxMane\", 1, \"0\"),\r\n    }\r\n\r\n    evalValueList = {\r\n        maxHits: (+this.list.boneHits.value[0] + 1) * 4 + +this.list.harks.value[1] * 8 + +this.list.addMaxHits.value[0],\r\n        maxMane: (+this.list.boneMane.value[0] + 1) * 4 + +this.list.harks.value[4] * 8 + +this.list.addMaxMane.value[0],\r\n        skillPoint: +this.list.power.value[0] - +this.list.harks.value.reduce((acc, cur) => acc + +cur, 0) - +this.list.naviks.value.reduce((acc, cur) => acc + +cur, 0),\r\n    }\r\n}\r\n\r\nexport default CharlistData"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}